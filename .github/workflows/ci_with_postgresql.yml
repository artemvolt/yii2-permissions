name: CI with PostgreSQL
on:
  pull_request:
    branches: [ master ]

env:
  PERM_DB_DSN: "pgsql:host=127.0.0.1;port=5432;dbname=yii2-permissions"
  PERM_DB_USER: "postgres"
  PERM_DB_PASS: "postgres"

jobs:
  build:
    name: PHP ${{ matrix.php }} - ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        php:
          - 8.0
#          - 8.1

    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_DB: yii2-permissions
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set dirs
        run: |
          chmod 777 ./tests/_app/runtime
          chmod 777 ./tests/_app/assets
          chmod 777 .git/HEAD

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: imagick, pdo_pgsql, opcache
          ini-values: opcache.enable=1, opcache.enable_cli=1, apc.enable_cli=1
        env:
          COMPOSER_TOKEN: ${{ secrets.COMPOSER_GITHUB_TOKEN }}

      - name: Check php and composer
        run: php -v && composer --version

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install

#      - name: Prepare configs
#        run: cp tests/_app/db.ci.php tests/_app/config/db.php

#      - name: Install migrations
#        run: |
#          composer migrations
#          php yii migrate --migrationPath=@app/migrations/isu --interactive=0
        
#      - name: Dump migration
#        run: pg_dump --schema-only --if-exists --clean --dbname=postgresql://cpu:postgres@127.0.0.1:5432/cpu --file=./tests/_data/dumps/base_structure.sql


      - name: Prepare test
        run: cp tests/.env.example tests/.env

      - name: Permissions for folder
        run: |
          mkdir runtime/logs
          chmod -R 777 runtime/*

      - name: Run tests
        run: vendor/bin/codecept run
        env:
          COMPOSER_TOKEN: ${{ secrets.COMPOSER_GITHUB_TOKEN }}